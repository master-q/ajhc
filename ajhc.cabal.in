cabal-version: >= 1.10
name:          @PACKAGE_NAME@
build-type:    Custom
version:       @VERSION@
license:       GPL-2
license-file:  COPYING
category:      Compiler
author:        John Meacham <john@repetae.net>
maintainer:    Metasepi team <metasepi@gmail.com>
synopsis:      Haskell compiler that produce binary through C language
description:   Ajhc is a fork of jhc.
               The jhc is a haskell compiler which aims to produce the most efficient
               programs possible via whole program analysis and other optimizations.
               .
               The jhc is very minimalist in that it does not have a precompiled run time
               system, but rather generates what is needed as part of the compilation
               process. However, back ends do have specific run-time representations of
               data, which can be affected by things like the choice of garbage collector.
               .
               Perhaps you can get internal overview with following compile flow image:
               .
               .
               <<https://raw.github.com/ajhc/ajhc/arafura/docs/jhc_compile_flow.png>>
homepage:      http://ajhc.metasepi.org/
bug-reports:   http://github.com/ajhc/ajhc/issues

data-files:    README.md

extra-source-files:
    examples/*.hs rts/HsFFI.h Makefile.cabalinst library_deps.make src/Jhc/data/targets.ini
    src/Jhc/StringTable/StringTable_cbits.h src/Jhc/cbits/config.h src/Jhc/hs_src_config.h
    src/Jhc/data/Typeable.h utils/build_extlibs.prl
    @JHCLIB_FILES@

source-repository head
    type:     git
    location: https://github.com/ajhc/ajhc.git

library
    hs-source-dirs: src
    default-language: Haskell98

    c-sources:
        src/Jhc/StringTable/StringTable_cbits.c
        src/Jhc/cbits/md5sum.c
        src/Jhc/cbits/lookup3.c

    include-dirs:
        src/Jhc/data, src/Jhc/StringTable, src/Jhc/cbits, src/Jhc

    build-depends:
        base >= 4.0 && < 5,
        HsSyck,
        array,
        binary,
        bytestring,
        containers,
        cpphs,
        derive,
        directory,
        fgl,
        filepath,
        haskeline,
        mtl,
        old-time,
        pretty,
        process,
        random,
        regex-compat,
        syb,
        temporary,
        utf8-string,
        zlib

    if os(windows)
        build-depends: Win32
    else
        build-depends: unix

    exposed-modules:
        Jhc.C.FFI
        Jhc.C.FromGrin2
        Jhc.C.Generate
        Jhc.C.Prims
        Jhc.Cmm.Number
        Jhc.Cmm.Op
        Jhc.Cmm.OpEval
        Jhc.DataConstructors
        Jhc.DerivingDrift.DataP
        Jhc.DerivingDrift.Drift
        Jhc.DerivingDrift.RuleUtils
        Jhc.DerivingDrift.StandardRules
        Jhc.Doc.Attr
        Jhc.Doc.Chars
        Jhc.Doc.DocLike
        Jhc.Doc.PPrint
        Jhc.Doc.Pretty
        Jhc.E.Annotate
        Jhc.E.Arbitrary
        Jhc.E.Binary
        Jhc.E.CPR
        Jhc.E.Demand
        Jhc.E.Diff
        Jhc.E.E
        Jhc.E.Eta
        Jhc.E.Eval
        Jhc.E.FreeVars
        Jhc.E.FromHs
        Jhc.E.Inline
        Jhc.E.LambdaLift
        Jhc.E.LetFloat
        Jhc.E.Lint
        Jhc.E.Main
        Jhc.E.PrimDecode
        Jhc.E.PrimOpt
        Jhc.E.Program
        Jhc.E.Rules
        Jhc.E.SSimplify
        Jhc.E.Show
        Jhc.E.Subst
        Jhc.E.Traverse
        Jhc.E.Type
        Jhc.E.TypeAnalysis
        Jhc.E.TypeCheck
        Jhc.E.Values
        Jhc.E.WorkerWrapper
        Jhc.FindFixpoint
        Jhc.Fixer.Fixer
        Jhc.Fixer.Supply
        Jhc.Fixer.VMap
        Jhc.FlagDump
        Jhc.FlagOpts
        Jhc.FrontEnd.Class
        Jhc.FrontEnd.DataConsAssump
        Jhc.FrontEnd.DeclsDepends
        Jhc.FrontEnd.DependAnalysis
        Jhc.FrontEnd.Desugar
        Jhc.FrontEnd.Diagnostic
        Jhc.FrontEnd.Exports
        Jhc.FrontEnd.FrontEnd
        Jhc.FrontEnd.HsErrors
        Jhc.FrontEnd.HsParser
        Jhc.FrontEnd.HsPretty
        Jhc.FrontEnd.HsSyn
        Jhc.FrontEnd.Infix
        Jhc.FrontEnd.KindInfer
        Jhc.FrontEnd.Lexer
        Jhc.FrontEnd.ParseMonad
        Jhc.FrontEnd.ParseUtils
        Jhc.FrontEnd.Rename
        Jhc.FrontEnd.Representation
        Jhc.FrontEnd.SrcLoc
        Jhc.FrontEnd.Syn.Options
        Jhc.FrontEnd.Syn.Traverse
        Jhc.FrontEnd.Tc.Class
        Jhc.FrontEnd.Tc.Kind
        Jhc.FrontEnd.Tc.Main
        Jhc.FrontEnd.Tc.Module
        Jhc.FrontEnd.Tc.Monad
        Jhc.FrontEnd.Tc.Type
        Jhc.FrontEnd.Tc.Unify
        Jhc.FrontEnd.TypeSigs
        Jhc.FrontEnd.TypeSynonyms
        Jhc.FrontEnd.TypeSyns
        Jhc.FrontEnd.Unlit
        Jhc.FrontEnd.Utils
        Jhc.FrontEnd.Warning
        Jhc.GenUtil
        Jhc.Grin.DeadCode
        Jhc.Grin.Devolve
        Jhc.Grin.EvalInline
        Jhc.Grin.FromE
        Jhc.Grin.Grin
        Jhc.Grin.HashConst
        Jhc.Grin.Lint
        Jhc.Grin.Main
        Jhc.Grin.NodeAnalyze
        Jhc.Grin.Noodle
        Jhc.Grin.Optimize
        Jhc.Grin.SSimplify
        Jhc.Grin.Show
        Jhc.Grin.StorageAnalysis
        Jhc.Grin.Val
        Jhc.Grin.Whiz
        Jhc.Ho.Binary
        Jhc.Ho.Build
        Jhc.Ho.Collected
        Jhc.Ho.Library
        Jhc.Ho.ReadSource
        Jhc.Ho.Type
        Jhc.Info.Binary
        Jhc.Info.Info
        Jhc.Info.Properties
        Jhc.Info.Types
        Jhc.Interactive
        Jhc.Name.Binary
        Jhc.Name.Id
        Jhc.Name.Name
        Jhc.Name.Names
        Jhc.Name.Prim
        Jhc.Name.VConsts
        Jhc.Options
        Jhc.PackedString
        Jhc.RawFiles
        Jhc.Stats
        Jhc.StringTable.Atom
        Jhc.Support.CFF
        Jhc.Support.Cabal
        Jhc.Support.CanType
        Jhc.Support.Compat
        Jhc.Support.CompatMingw32
        Jhc.Support.FreeVars
        Jhc.Support.IniParse
        Jhc.Support.MD5
        Jhc.Support.MapBinaryInstance
        Jhc.Support.TempDir
        Jhc.Support.Tickle
        Jhc.Support.Transform
        Jhc.Support.Tuple
        Jhc.Support.Unparse
        Jhc.Util.BitSet
        Jhc.Util.ContextMonad
        Jhc.Util.ExitCodes
        Jhc.Util.FilterInput
        Jhc.Util.GMap
        Jhc.Util.Gen
        Jhc.Util.Graph
        Jhc.Util.Graphviz
        Jhc.Util.HasSize
        Jhc.Util.Histogram
        Jhc.Util.Inst
        Jhc.Util.IntBag
        Jhc.Util.Interact
        Jhc.Util.NameMonad
        Jhc.Util.Once
        Jhc.Util.Perhaps
        Jhc.Util.Progress
        Jhc.Util.RWS
        Jhc.Util.ReaderWriter
        Jhc.Util.Relation
        Jhc.Util.SHA1
        Jhc.Util.SameShape
        Jhc.Util.Seq
        Jhc.Util.SetLike
        Jhc.Util.TrueSet
        Jhc.Util.UnionFind
        Jhc.Util.UnionSolve
        Jhc.Util.UniqueMonad
        Jhc.Util.Util
        Jhc.Util.VarName
        Jhc.Util.YAML
        Jhc.Version.Config
        Jhc.Version.Version

    other-modules:
        Paths_@PACKAGE_NAME@

    default-extensions:
        BangPatterns, TypeFamilies, ViewPatterns, UndecidableInstances,
        OverlappingInstances, RecordWildCards, RecursiveDo, TupleSections,
        ParallelListComp, GeneralizedNewtypeDeriving, ScopedTypeVariables,
        FlexibleInstances, TypeSynonymInstances, MultiParamTypeClasses,
        DeriveDataTypeable, NoMonoLocalBinds, NamedFieldPuns,
        ForeignFunctionInterface, UnliftedFFITypes, ImplicitParams,
        UnboxedTuples, StandaloneDeriving, DeriveFunctor, DeriveFoldable,
        DeriveTraversable, FlexibleContexts,
        ConstrainedClassMethods, FunctionalDependencies, MagicHash,
        PolymorphicComponents, ExistentialQuantification, UnicodeSyntax,
        PostfixOperators, PatternGuards, LiberalTypeSynonyms, RankNTypes,
        TypeOperators, EmptyDataDecls, KindSignatures

    ghc-options:    -W -fno-warn-unused-matches  -fwarn-type-defaults -i./src/Jhc
    cc-options:     -std=c99
    cpp-options:    -DUSE_HASKELINE -DWITH_CABAL

executable @PACKAGE_NAME@
    main-is:        Main.hs
    hs-source-dirs: src_main
    default-language: Haskell98

    build-depends:
        base >= 4.0 && < 5,
        HsSyck,
        array,
        binary,
        bytestring,
        containers,
        derive,
        directory,
        fgl,
        filepath,
        haskeline,
        mtl,
        old-time,
        pretty,
        process,
        random,
        regex-compat,
        syb,
        temporary,
        utf8-string,
        zlib,
        @PACKAGE_NAME@

    if os(windows)
        build-depends: Win32
    else
        build-depends: unix

    ghc-options:    -W -fno-warn-unused-matches  -fwarn-type-defaults
    cc-options:     -std=c99
    cpp-options:    -DUSE_HASKELINE -DWITH_CABAL

executable jahm
    main-is:        Main.hs
    hs-source-dirs: src_jahm
    default-language: Haskell98

    build-depends:
        base >= 4.0 && < 5,
        HTTP,
        bytestring,
        filepath,
        network,
        pretty,
        process,
        directory,
        @PACKAGE_NAME@

  if !os(windows)
    build-depends:
        unix

    other-modules:
        Distribution.Client.HttpUtils
        Distribution.Compat.CopyFile
        Distribution.Compat.Exception
        Distribution.Compat.TempFile
        Distribution.Simple.Utils
        Distribution.Text
        Distribution.Verbosity
